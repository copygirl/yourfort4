// Generated by LiveScript 1.4.0
(function(){
  var Entity, Block;
  Entity = require('./entity');
  module.exports = Block = (function(superclass){
    var prototype = extend$((import$(Block, superclass).displayName = 'Block', Block), superclass).prototype, constructor = Block;
    function Block(){
      Block.superclass.apply(this, arguments);
      this.size = [16, 16];
      this.solid = true;
      this.renderer = "sprite";
      this.sprite = "block";
    }
    return Block;
  }(Entity));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
